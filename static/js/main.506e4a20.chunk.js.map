{"version":3,"sources":["redux/tasksSlice.js","views/Panel/Panel.jsx","components/AddTask/AddTask.jsx","components/TaskList/TaksList.jsx","App.js","middleware/notification.js","app/store.js","index.js"],"names":["tasksSlice","createSlice","name","initialState","error","tasks","id","text","date","active","priority","reducers","add","state","action","payload","remove","tasksList","finish","actions","selectTasks","selectError","useStyles","makeStyles","root","minWidth","height","card","margin","item","display","AddTask","children","classes","Paper","elevation","className","Card","title","fontSize","errorIsActive","useSelector","dispatch","useDispatch","useState","Date","selectedDate","handleDateChange","inputTask","setInputTask","checkboxTask","setCheckboxTask","Panel","CardContent","Typography","color","gutterBottom","FormControl","TextField","label","helperText","value","onChange","e","target","utils","DateFnsUtils","DatePicker","minDate","FormControlLabel","control","Checkbox","checked","onClick","uuidv4","toLocaleDateString","split","join","Button","variant","importantField","fontWeight","position","right","ListOfTasks","onClickFinish","onClickRemove","List","ListItem","ListItemText","primary","secondary","ListItemSecondaryAction","IconButton","edge","aria-label","Divider","TypographTitle","TaksList","activeTasks","finishedTasks","handleRemoveTask","indexTask","findIndex","task","splice","map","key","handleFinishTask","App","toast","configure","filter","notificationMiddleware","next","test","type","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","success","configureStore","middleware","getDefaultMiddleware","concat","reducer","tasksReducer","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.506e4a20.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nexport const tasksSlice = createSlice({\r\n  name: \"tasks\",\r\n  initialState: {\r\n    error: false,\r\n    tasks: [\r\n      {\r\n        id: \"eefffa0d-898e-4db3-885e-3384a8aad3a4\",\r\n        text: \"Nauczyć się TS\",\r\n        date: \"20-12-2020\",\r\n        active: true,\r\n        priority: true,\r\n      },\r\n      {\r\n        id: \"52ca493b-ab30-4f16-9734-c56a35f2a187\",\r\n        text: \"Umyć auto\",\r\n        date: \"18-12-2020\",\r\n        active: true,\r\n        priority: false,\r\n      },\r\n      {\r\n        id: \"6df61d5c-46fb-4793-96e1-0a38a9484f01\",\r\n        text: \"Zrobić aplikację ToDo\",\r\n        date: \"13-12-2020\",\r\n        active: false,\r\n        priority: true,\r\n      },\r\n    ],\r\n  },\r\n  reducers: {\r\n    add: (state, action) => {\r\n      state.tasks = [...state.tasks, action.payload];\r\n    },\r\n    remove: (state, action) => {\r\n      state.tasks = action.payload.tasksList;\r\n    },\r\n    finish: (state, action) => {\r\n      state.tasks = action.payload.tasksList;\r\n    },\r\n    error: (state, action) => {\r\n      state.error = action.payload.error;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { add, remove, finish, error } = tasksSlice.actions;\r\n\r\nexport const selectTasks = (state) => state.tasks.tasks;\r\nexport const selectError = (state) => state.tasks.error;\r\n\r\nexport default tasksSlice.reducer;\r\n","import React from \"react\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Card, Paper } from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 475,\n    height: 600,\n  },\n  card: {\n    margin: 10,\n  },\n  item: {\n    display: \"block\",\n    margin: 15,\n  },\n});\n\nfunction AddTask({ children }) {\n  const classes = useStyles();\n\n  return (\n    <div>\n      <Paper elevation={3} className={classes.card}>\n        <Card className={classes.root}>{children}</Card>\n      </Paper>\n    </div>\n  );\n}\n\nexport default AddTask;\n","import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { add, error, selectError } from \"../../redux/tasksSlice\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nimport { Panel } from \"../../views\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport DateFnsUtils from \"@date-io/date-fns\"; // choose your lib\nimport { DatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport {\n  CardContent,\n  Button,\n  Typography,\n  FormControl,\n  FormControlLabel,\n  Checkbox,\n  TextField,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 475,\n    height: 600,\n  },\n  card: {\n    margin: 10,\n  },\n  title: {\n    fontSize: 20,\n  },\n  item: {\n    display: \"block\",\n    margin: 15,\n  },\n});\n\nfunction AddTask() {\n  const errorIsActive = useSelector(selectError);\n  const dispatch = useDispatch();\n  const [selectedDate, handleDateChange] = useState(new Date());\n  const [inputTask, setInputTask] = useState(\"\");\n  const [checkboxTask, setCheckboxTask] = useState(false);\n  const classes = useStyles();\n\n  const handleAddTask = () => {\n    if (!inputTask) {\n      dispatch(error({ error: true }));\n      return;\n    } else {\n      if (errorIsActive) dispatch(error({ error: false }));\n\n      dispatch(\n        add({\n          id: uuidv4(),\n          text: inputTask,\n          date: new Date(selectedDate)\n            .toLocaleDateString()\n            .split(\".\")\n            .join(\"-\"),\n          active: true,\n          priority: checkboxTask,\n        })\n      );\n\n      setInputTask(\"\");\n      setCheckboxTask(false);\n      handleDateChange(new Date());\n    }\n  };\n\n  return (\n    <div>\n      <Panel>\n        <CardContent>\n          <Typography\n            className={classes.title}\n            color=\"textSecondary\"\n            gutterBottom\n          >\n            Add new task\n          </Typography>\n\n          <div className={classes.item}>\n            <FormControl>\n              <TextField\n                error={errorIsActive}\n                id=\"standard-error-helper-text\"\n                label={errorIsActive ? \"Error\" : \"Description\"}\n                helperText={errorIsActive && \"Filed is required\"}\n                value={inputTask}\n                onChange={(e) => (\n                  setInputTask(e.target.value),\n                  errorIsActive && dispatch(error({ error: false }))\n                )}\n              />\n            </FormControl>\n          </div>\n\n          <div className={classes.item}>\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n              <DatePicker\n                value={selectedDate}\n                minDate={new Date()}\n                onChange={handleDateChange}\n              />\n            </MuiPickersUtilsProvider>\n          </div>\n\n          <div className={classes.item}>\n            <FormControlLabel\n              control={<Checkbox name=\"priority\" color=\"primary\" />}\n              label=\"Priority\"\n              checked={checkboxTask}\n              onChange={(e) => setCheckboxTask(e.target.checked)}\n            />\n          </div>\n        </CardContent>\n\n        <div className={classes.item} onClick={handleAddTask}>\n          <Button color=\"primary\" variant=\"contained\">\n            Add taks\n          </Button>\n        </div>\n      </Panel>\n    </div>\n  );\n}\n\nexport default AddTask;\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { finish, remove, selectTasks } from \"../../redux/tasksSlice\";\n\nimport { Panel } from \"../../views\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Typography,\n  CardContent,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemSecondaryAction,\n  IconButton,\n  Divider,\n} from \"@material-ui/core\";\n\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport DoneIcon from \"@material-ui/icons/Done\";\n\nconst useStyles = makeStyles({\n  importantField: {\n    color: \"red\",\n    fontWeight: 400,\n  },\n  date: {\n    position: \"absolute\",\n    right: \"20%\",\n  },\n  title: {\n    fontSize: 20,\n  },\n});\n\nconst ListOfTasks = ({\n  text,\n  date,\n  priority,\n  active,\n  onClickFinish,\n  onClickRemove,\n}) => {\n  const classes = useStyles();\n\n  const importantField = (\n    <span className={classes.importantField}>Important</span>\n  );\n\n  return (\n    <div>\n      <List>\n        <ListItem>\n          <ListItemText primary={text} secondary={priority && importantField} />\n          <ListItemText className={classes.date}>{date}</ListItemText>\n          <ListItemSecondaryAction>\n            <IconButton edge=\"end\" aria-label=\"delete\" onClick={onClickRemove}>\n              <DeleteIcon />\n            </IconButton>\n            {active && (\n              <IconButton\n                edge=\"end\"\n                aria-label=\"delete\"\n                onClick={onClickFinish}\n              >\n                <DoneIcon />\n              </IconButton>\n            )}\n          </ListItemSecondaryAction>\n        </ListItem>\n      </List>\n      <Divider />\n    </div>\n  );\n};\nconst TypographTitle = ({ title }) => {\n  const classes = useStyles();\n\n  return (\n    <CardContent>\n      <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n        {title}\n      </Typography>\n    </CardContent>\n  );\n};\n\nfunction TaksList({ activeTasks = [], finishedTasks = [], title }) {\n  const tasks = useSelector(selectTasks);\n  const dispatch = useDispatch();\n\n  const handleFinishTask = (id) => {\n    let tasksList = [...tasks];\n    tasksList = tasksList.map((task) => {\n      if (task.id === id) {\n        return {\n          id: task.id,\n          text: task.text,\n          date: task.date,\n          active: false,\n          priority: task.priority,\n        };\n      } else {\n        return task;\n      }\n    });\n\n    dispatch(\n      finish({\n        tasksList,\n      })\n    );\n  };\n\n  const handleRemoveTask = (id) => {\n    const tasksList = [...tasks];\n    const indexTask = tasksList.findIndex((task) => task.id === id);\n    tasksList.splice(indexTask, 1);\n\n    dispatch(\n      remove({\n        tasksList,\n      })\n    );\n  };\n\n  return (\n    <div>\n      <Panel>\n        <TypographTitle title={title} />\n\n        {activeTasks &&\n          activeTasks.map((task) => (\n            <ListOfTasks\n              {...task}\n              key={task.id}\n              onClickFinish={() => handleFinishTask(task.id)}\n              onClickRemove={() => handleRemoveTask(task.id)}\n            />\n          ))}\n        {finishedTasks &&\n          finishedTasks.map((task) => (\n            <ListOfTasks\n              {...task}\n              key={task.id}\n              onClickRemove={() => handleRemoveTask(task.id)}\n            />\n          ))}\n      </Panel>\n    </div>\n  );\n}\n\nexport default TaksList;\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectTasks } from \"./redux/tasksSlice\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nimport { AddTask, TaskList } from \"./components\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport \"./assets/App.css\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    display: \"flex\",\r\n    margin: 10,\r\n  },\r\n});\r\n\r\nfunction App() {\r\n  const tasks = useSelector(selectTasks);\r\n  const classes = useStyles();\r\n  toast.configure();\r\n\r\n  const activeTasks = tasks && tasks.filter((task) => task.active);\r\n  const finishedTasks = tasks && tasks.filter((task) => !task.active);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <div className={classes.root}>\r\n          <AddTask />\r\n\r\n          {/* Active Tasks */}\r\n          <TaskList\r\n            activeTasks={activeTasks && [...activeTasks]}\r\n            title={\"Active Tasks\"}\r\n          />\r\n\r\n          {/* Finised Tasks */}\r\n          <TaskList\r\n            finishedTasks={finishedTasks && [...finishedTasks]}\r\n            title={\"Finished Tasks\"}\r\n          />\r\n        </div>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { toast } from \"react-toastify\";\n\nconst notificationMiddleware = () => (next) => (action) => {\n  if (/(.*)(error)/.test(action.type) && action.payload.error) {\n    toast.error(\"Something went wrong!\", {\n      position: \"top-center\",\n      autoClose: 3500,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n    });\n  } else if (/(.*)(add)/.test(action.type)) {\n    toast.success(\"Added new task!\", {\n      position: \"top-center\",\n      autoClose: 3500,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n    });\n  }\n\n  next(action);\n};\n\nexport default notificationMiddleware;\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport tasksReducer from \"../redux/tasksSlice\";\r\nimport notificationMiddleware from \"../middleware/notification\";\r\n\r\nexport default configureStore({\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware().concat(notificationMiddleware),\r\n  reducer: {\r\n    tasks: tasksReducer,\r\n  },\r\n});\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./assets/index.css\";\r\nimport App from \"./App\";\r\nimport store from \"./app/store\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}