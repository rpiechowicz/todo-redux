{"version":3,"sources":["redux/tasksSlice.js","views/Panel/Panel.jsx","components/AddTask/AddTask.jsx","components/TaskList/TaksList.jsx","App.js","middleware/notification.js","app/store.js","index.js"],"names":["tasksSlice","createSlice","name","initialState","error","tasks","id","text","date","active","priority","reducers","add","state","action","payload","remove","tasksList","finish","actions","selectTasks","selectError","useStyles","makeStyles","root","minWidth","height","card","margin","item","display","AddTask","children","classes","Paper","elevation","className","Card","title","fontSize","errorIsActive","useSelector","dispatch","useDispatch","useState","Date","selectedDate","handleDateChange","inputTask","setInputTask","checkboxTask","setCheckboxTask","labelError","useMemo","helperTextError","handleAddTask","useCallback","uuidv4","toLocaleDateString","split","join","handleChangeInput","e","target","value","handleSetCheckbox","checked","Panel","CardContent","Typography","color","gutterBottom","FormControl","TextField","label","helperText","onChange","utils","DateFnsUtils","DatePicker","minDate","FormControlLabel","control","Checkbox","onClick","Button","variant","importantField","fontWeight","position","right","ListOfTasks","onClickFinish","onClickRemove","secondaryText","List","ListItem","ListItemText","primary","secondary","ListItemSecondaryAction","IconButton","edge","aria-label","Divider","TypographTitle","TaksList","activeTasks","finishedTasks","handleFinishTask","map","task","handleRemoveTask","indexTask","findIndex","splice","key","App","toast","configure","filter","notificationMiddleware","next","test","type","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","success","configureStore","middleware","getDefaultMiddleware","concat","reducer","tasksReducer","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.b61be3e6.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nexport const tasksSlice = createSlice({\r\n  name: \"tasks\",\r\n  initialState: {\r\n    error: false,\r\n    tasks: [\r\n      {\r\n        id: \"eefffa0d-898e-4db3-885e-3384a8aad3a4\",\r\n        text: \"Nauczyć się TS\",\r\n        date: \"20-12-2020\",\r\n        active: true,\r\n        priority: true,\r\n      },\r\n      {\r\n        id: \"52ca493b-ab30-4f16-9734-c56a35f2a187\",\r\n        text: \"Umyć auto\",\r\n        date: \"18-12-2020\",\r\n        active: true,\r\n        priority: false,\r\n      },\r\n      {\r\n        id: \"6df61d5c-46fb-4793-96e1-0a38a9484f01\",\r\n        text: \"Zrobić aplikację ToDo\",\r\n        date: \"13-12-2020\",\r\n        active: false,\r\n        priority: true,\r\n      },\r\n    ],\r\n  },\r\n  reducers: {\r\n    add: (state, action) => {\r\n      state.tasks = [...state.tasks, action.payload];\r\n    },\r\n    remove: (state, action) => {\r\n      state.tasks = action.payload.tasksList;\r\n    },\r\n    finish: (state, action) => {\r\n      state.tasks = action.payload.tasksList;\r\n    },\r\n    error: (state, action) => {\r\n      state.error = action.payload.error;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { add, remove, finish, error } = tasksSlice.actions;\r\n\r\nexport const selectTasks = (state) => state.tasks.tasks;\r\nexport const selectError = (state) => state.tasks.error;\r\n\r\nexport default tasksSlice.reducer;\r\n","import React from \"react\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Card, Paper } from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 475,\n    height: 600,\n  },\n  card: {\n    margin: 10,\n  },\n  item: {\n    display: \"block\",\n    margin: 15,\n  },\n});\n\nfunction AddTask({ children }) {\n  const classes = useStyles();\n\n  return (\n    <div>\n      <Paper elevation={3} className={classes.card}>\n        <Card className={classes.root}>{children}</Card>\n      </Paper>\n    </div>\n  );\n}\n\nexport default AddTask;\n","import React, { useState, useCallback, useMemo } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { add, error, selectError } from \"../../redux/tasksSlice\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nimport { Panel } from \"../../views\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport DateFnsUtils from \"@date-io/date-fns\"; // choose your lib\nimport { DatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport {\n  CardContent,\n  Button,\n  Typography,\n  FormControl,\n  FormControlLabel,\n  Checkbox,\n  TextField,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 475,\n    height: 600,\n  },\n  card: {\n    margin: 10,\n  },\n  title: {\n    fontSize: 20,\n  },\n  item: {\n    display: \"block\",\n    margin: 15,\n  },\n});\n\nfunction AddTask() {\n  const errorIsActive = useSelector(selectError);\n  const dispatch = useDispatch();\n  const [selectedDate, handleDateChange] = useState(new Date());\n  const [inputTask, setInputTask] = useState(\"\");\n  const [checkboxTask, setCheckboxTask] = useState(false);\n  const classes = useStyles();\n\n  const labelError = useMemo(() => (errorIsActive ? \"Error\" : \"Description\"), [\n    errorIsActive,\n  ]);\n\n  const helperTextError = useMemo(() => errorIsActive && \"Filed is required\", [\n    errorIsActive,\n  ]);\n\n  const handleAddTask = useCallback(() => {\n    if (!inputTask) {\n      dispatch(error({ error: true }));\n      return;\n    } else {\n      if (errorIsActive) dispatch(error({ error: false }));\n\n      dispatch(\n        add({\n          id: uuidv4(),\n          text: inputTask,\n          date: new Date(selectedDate)\n            .toLocaleDateString()\n            .split(\".\")\n            .join(\"-\"),\n          active: true,\n          priority: checkboxTask,\n        })\n      );\n\n      setInputTask(\"\");\n      setCheckboxTask(false);\n      handleDateChange(new Date());\n    }\n  }, [checkboxTask, errorIsActive, inputTask, selectedDate, dispatch]);\n\n  const handleChangeInput = useCallback(\n    (e) =>\n      setInputTask(e.target.value) &&\n      errorIsActive &&\n      dispatch(error({ error: false })),\n    [errorIsActive, dispatch]\n  );\n\n  const handleSetCheckbox = useCallback(\n    (e) => setCheckboxTask(e.target.checked),\n    []\n  );\n\n  return (\n    <div>\n      <Panel>\n        <CardContent>\n          <Typography\n            className={classes.title}\n            color=\"textSecondary\"\n            gutterBottom\n          >\n            Add new task\n          </Typography>\n\n          <div className={classes.item}>\n            <FormControl>\n              <TextField\n                error={errorIsActive}\n                id=\"standard-error-helper-text\"\n                label={labelError}\n                helperText={helperTextError}\n                value={inputTask}\n                onChange={handleChangeInput}\n              />\n            </FormControl>\n          </div>\n\n          <div className={classes.item}>\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n              <DatePicker\n                value={selectedDate}\n                minDate={new Date()}\n                onChange={handleDateChange}\n              />\n            </MuiPickersUtilsProvider>\n          </div>\n\n          <div className={classes.item}>\n            <FormControlLabel\n              control={<Checkbox name=\"priority\" color=\"primary\" />}\n              label=\"Priority\"\n              checked={checkboxTask}\n              onChange={handleSetCheckbox}\n            />\n          </div>\n        </CardContent>\n\n        <div className={classes.item} onClick={handleAddTask}>\n          <Button color=\"primary\" variant=\"contained\">\n            Add task\n          </Button>\n        </div>\n      </Panel>\n    </div>\n  );\n}\n\nexport default AddTask;\n","import React, { useMemo, useCallback } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { finish, remove, selectTasks } from \"../../redux/tasksSlice\";\n\nimport { Panel } from \"../../views\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Typography,\n  CardContent,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemSecondaryAction,\n  IconButton,\n  Divider,\n} from \"@material-ui/core\";\n\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport DoneIcon from \"@material-ui/icons/Done\";\n\nconst useStyles = makeStyles({\n  importantField: {\n    color: \"red\",\n    fontWeight: 400,\n  },\n  date: {\n    position: \"absolute\",\n    right: \"20%\",\n  },\n  title: {\n    fontSize: 20,\n  },\n});\n\nconst ListOfTasks = ({\n  text,\n  date,\n  priority,\n  active,\n  onClickFinish,\n  onClickRemove,\n}) => {\n  const classes = useStyles();\n\n  const secondaryText = useMemo(\n    () => priority && <span className={classes.importantField}>Important</span>,\n    [priority, classes.importantField]\n  );\n\n  return (\n    <div>\n      <List>\n        <ListItem>\n          <ListItemText primary={text} secondary={secondaryText} />\n          <ListItemText className={classes.date}>{date}</ListItemText>\n          <ListItemSecondaryAction>\n            <IconButton edge=\"end\" aria-label=\"delete\" onClick={onClickRemove}>\n              <DeleteIcon />\n            </IconButton>\n            {active && (\n              <IconButton\n                edge=\"end\"\n                aria-label=\"delete\"\n                onClick={onClickFinish}\n              >\n                <DoneIcon />\n              </IconButton>\n            )}\n          </ListItemSecondaryAction>\n        </ListItem>\n      </List>\n      <Divider />\n    </div>\n  );\n};\nconst TypographTitle = ({ title }) => {\n  const classes = useStyles();\n\n  return (\n    <CardContent>\n      <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n        {title}\n      </Typography>\n    </CardContent>\n  );\n};\n\nfunction TaksList({ activeTasks = [], finishedTasks = [], title }) {\n  const tasks = useSelector(selectTasks);\n  const dispatch = useDispatch();\n\n  const handleFinishTask = useCallback(\n    (id) => {\n      let tasksList = [...tasks];\n      tasksList = tasksList.map((task) => {\n        if (task.id === id) {\n          return {\n            id: task.id,\n            text: task.text,\n            date: task.date,\n            active: false,\n            priority: task.priority,\n          };\n        } else {\n          return task;\n        }\n      });\n\n      dispatch(\n        finish({\n          tasksList,\n        })\n      );\n    },\n    [tasks, dispatch]\n  );\n\n  const handleRemoveTask = useCallback(\n    (id) => {\n      const tasksList = [...tasks];\n      const indexTask = tasksList.findIndex((task) => task.id === id);\n      tasksList.splice(indexTask, 1);\n\n      dispatch(\n        remove({\n          tasksList,\n        })\n      );\n    },\n    [tasks, dispatch]\n  );\n\n  return (\n    <div>\n      <Panel>\n        <TypographTitle title={title} />\n\n        {activeTasks &&\n          activeTasks.map((task) => (\n            <ListOfTasks\n              {...task}\n              key={task.id}\n              onClickFinish={() => handleFinishTask(task.id)}\n              onClickRemove={() => handleRemoveTask(task.id)}\n            />\n          ))}\n        {finishedTasks &&\n          finishedTasks.map((task) => (\n            <ListOfTasks\n              {...task}\n              key={task.id}\n              onClickRemove={() => handleRemoveTask(task.id)}\n            />\n          ))}\n      </Panel>\n    </div>\n  );\n}\n\nexport default TaksList;\n","import React, { useMemo } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectTasks } from \"./redux/tasksSlice\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nimport { AddTask, TaskList } from \"./components\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport \"./assets/App.css\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    display: \"flex\",\r\n    margin: 10,\r\n  },\r\n});\r\n\r\nfunction App() {\r\n  const tasks = useSelector(selectTasks);\r\n  const classes = useStyles();\r\n  toast.configure();\r\n\r\n  const activeTasks = useMemo(\r\n    () => tasks && tasks.filter((task) => task.active),\r\n    [tasks]\r\n  );\r\n  const finishedTasks = useMemo(\r\n    () => tasks && tasks.filter((task) => !task.active),\r\n    [tasks]\r\n  );\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <div className={classes.root}>\r\n          <AddTask />\r\n\r\n          {/* Active Tasks */}\r\n          <TaskList\r\n            activeTasks={activeTasks && [...activeTasks]}\r\n            title={\"Active Tasks\"}\r\n          />\r\n\r\n          {/* Finised Tasks */}\r\n          <TaskList\r\n            finishedTasks={finishedTasks && [...finishedTasks]}\r\n            title={\"Finished Tasks\"}\r\n          />\r\n        </div>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { toast } from \"react-toastify\";\n\nconst notificationMiddleware = () => (next) => (action) => {\n  if (/(.*)(error)/.test(action.type) && action.payload.error) {\n    toast.error(\"Something went wrong!\", {\n      position: \"top-center\",\n      autoClose: 3500,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n    });\n  } else if (/(.*)(add)/.test(action.type)) {\n    toast.success(\"Added new task!\", {\n      position: \"top-center\",\n      autoClose: 3500,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n    });\n  }\n\n  next(action);\n};\n\nexport default notificationMiddleware;\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport tasksReducer from \"../redux/tasksSlice\";\r\nimport notificationMiddleware from \"../middleware/notification\";\r\n\r\nexport default configureStore({\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware().concat(notificationMiddleware),\r\n  reducer: {\r\n    tasks: tasksReducer,\r\n  },\r\n});\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./assets/index.css\";\r\nimport App from \"./App\";\r\nimport store from \"./app/store\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}